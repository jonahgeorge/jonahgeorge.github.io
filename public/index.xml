<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jonah George</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Jonah George</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spam detection in Ruby</title>
      <link>http://localhost:1313/posts/spam-detection-in-ruby/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/spam-detection-in-ruby/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;As any good Ruby developer does, I regularly review new projects by &lt;a href=&#34;https://github.com/ankane&#34;&gt;@ankane&lt;/a&gt;.&#xA;Most recently I came across &lt;a href=&#34;https://github.com/ankane/transformers-ruby&#34;&gt;&lt;code&gt;transformers-ruby&lt;/code&gt;&lt;/a&gt; and have been wondering about how to leverage HuggingFace models.&lt;/p&gt;&#xA;&lt;p&gt;A use-case finally arose in wanting to flag potential spam messages from users in a Ruby on Rails application. I initially found the &lt;a href=&#34;https://www.driftingruby.com/episodes/detect-spam-with-ai&#34;&gt;DriftingRuby episode &amp;ldquo;Detect Spam with AI&amp;rdquo;&lt;/a&gt; but was dissatisfied with the need to use &lt;a href=&#34;https://github.com/driftingruby/427-detect-spam-with-ai/tree/main/spam-checker&#34;&gt;a Python microservice&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This is my exploration in how to setup and use a permissively licensed spam detection model in Ruby.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Discovering &amp; reporting secrets bundled in an Electron app</title>
      <link>http://localhost:1313/posts/electron-bug-report/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/electron-bug-report/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&#xA;To protect myself, the affected company &amp;amp; application names are changed.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;In November 2022, as part of a consulting contract I found myself needing to configure Android devices to run in a form of kiosk-mode with&#xA;my contractor&amp;rsquo;s line-of-business app as the sole application usable on the device.&lt;/p&gt;&#xA;&lt;p&gt;The manufacturer of these Android devices, here-by referred to as BigCo, provided two features that allowed me to accomplish this at drastically reduced cost&#xA;compared to a traditional &lt;a href=&#34;https://en.wikipedia.org/wiki/Mobile_device_management&#34;&gt;mobile device management (MDM)&lt;/a&gt; solution:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
